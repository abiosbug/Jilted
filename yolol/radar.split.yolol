IF :RFDS*(:RFDS<:RD)*0^:RFC THEN :RAMM=:PX END GOTO1
IF :RFC*(:RFC<:RD) THEN :RAMM=:PX ELSE :RAMM=:PO END GOTO1
IF :RFTT*(:RFTT<:RD) THEN :RATT=:PX ELSE :RATT=:PO END GOTO1
IF :RFTB*(:RFTB<:RD)*0^:RFTT THEN :RATT=:PX END GOTO1
IF :RFBB*(:RFBB<:RD) THEN :RABB=:PX ELSE :RABB=:PO END GOTO1
IF :RFBT*(:RFBT<:RD)*0^:RFBB THEN :RABB=:PX END GOTO1
IF:RFTRC*(:RFTRC<:RD)THEN :RATRC=:PX+:PX ELSE :RATRC=:PO+:PO END GOTO1
IF:RFTLC*(:RFTLC<:RD)THEN :RATLC=:PX+:PX ELSE :RATLC=:PO+:PO END GOTO1
IF:RFBRC*(:RFBRC<:RD)THEN :RABRC=:PX+:PX ELSE :RABRC=:PO+:PO END GOTO1
IF:RFBLC*(:RFBLC<:RD)THEN :RABLC=:PX+:PX ELSE :RABLC=:PO+:PO END GOTO1
IF :RFBR*(:RFBR<:RD) THEN :RABR=:PX+:PX ELSE :RABR=:PO+:PO END GOTO1
IF :RFBL*(:RFBL<:RD) THEN :RABL=:PX+:PX ELSE :RABL=:PO+:PO END GOTO1
IF :RFRL*(:RFRL<:RD) THEN :RARR=:PX+:PX ELSE :RARR=:PO+:PO END GOTO1
IF :RFRR*(:RFRR<:RD) THEN :RARR=:PX+:PX ELSE :RARR=:PO+:PO END GOTO1
IF :RFLR*(:RFLR <:RD) THEN :RALL=:PX+:PX ELSE :RALL=:PO+:PO END GOTO1
IF :RFLL*(:RFLL<:RD) THEN :RALL=:PX+:PX ELSE :RALL=:PO+:PO END GOTO1
IF :RFTR*(:RFTR<:RD) THEN :RATR=:PX+:PX ELSE :RATR=:PO+:PO END GOTO1
IF :RFTL*(:RFTL<:RD) THEN :RATL=:PX+:PX ELSE :RATL=:PO+:PO END GOTO1
// RADAR DISTANCE CHECKS